用户与用户组
============

关于这部分内容，我们在日常的linux系统管理工作中用到的并不多，但这并不代表该内容不重要。毕竟linux系统是一个多用户的系统，每个账号都干什么用，你必须了如指掌。因为这涉及到一个安全的问题。

用户与组的概念
--------------

Linux是一个真实的、完整的多用户多任务操作系统。多用户多任务就是可以在系统上建立多个用户，而多个用户可以在同一时间内登录同一个系统执行各自不同的任务，而互不影响。例如某台linux服务器上有4个用户，分别是root、www、ftp和mysql，在同一时间内，root用户可能在查看系统日志，管理维护系统，www用户可能在修改自己的网页程序，ftp用户可能在上传软件到服务器，mysql用户可能在执行自己的 *SQL查询* [#SQL查询]_，每个用户互不干扰，有条不紊的进行着自己的工作，而每个用户之间不能越权访问，比如www用户不能执行mysql用户的SQL查询操作，ftp用户也不能修改www用户的网页程序。因此可知，不同用户具有不同的权限，每个用户是在权限允许的范围内完成不同的任务。linux正是通过这种权限的划分与管理，实现了多用户多任务的运行机制。

用户
^^^^^^

在linux下用户是根据角色定义的，具体分为三种角色：

* 超级用户
	拥有对系统的最高管理权限，默认是root用户。
* 普通用户
	只能对自己目录下的文件进行访问和修改，具有登录系统的权限，例如上面提到的www用户、ftp用户等。
* 虚拟用户
	也叫“伪”用户，这类用户最大的特点是不能登录系统，它们的存在主要是方便系统管理，满足相应的系统进程对文件属主的要求。例如系统默认的bin、adm、nobody用户等，一般运行的web服务，默认就是使用的nobody用户，但是nobody用户是不能登录系统的。

每个用户都用一个唯一的用户名和用户口令，在登录系统时，只有正确输入了用户名和密码，才能进入系统和自己的主目录。

用户标识号
^^^^^^^^^^^^^^

就是用户的UID，每个用户都有一个UID，并且是唯一的，通常UID号的取值范围是0～65535，0是超级用户root的标识号，1～99由系统保留，作为管理账号，普通用户的标识号从100开始。而在Linux系统中，普通用户UID默认从500开始。UID是linux下确认用户权限的标志，用户的角色和权限都是通过UID来实现的，因此多个用户公用一个UID是非常危险的，会造成系统权限和管理的混乱，例如将普通用户的UID设置为0后，这个普通用户就具有了root用户的权限，这是极度危险的操作。因此要尽量保持用户UID的唯一性。

用户组
^^^^^^^^^^

用户组是具有相同特征用户的逻辑集合。

有时我们需要让多个用户具有相同的权限，比如查看、修改某一个文件的权限，一种方法是分别对多个用户进行文件访问授权。如果有10个用户的话，就需要授权10次，显然这种方法不太合理；另一种方法是建立一个组，让这个组具有查看、修改此文件的权限，然后将所有需要访问此文件的用户放入这个组中，那么所有用户就具有了和组一样的权限。这就是用户组。将用户分组是Linux系统中对用户进行管理及控制访问权限的一种手段。通过定义用户组，在很大程度上简化了管理工作。

组标识号
^^^^^^^^^^^

就是组的GID，与用户的UID类似，这个字段记录了用户所属的用户组。

用户和组的关系
--------------

用户和用户组的对应关系有：一对一、一对多、多对一和多对多，下图展示了这种关系：

.. image :: http://www.uplook.cn/data/uploads/day_110810/201108101916474392.png

* 一对一
	即一个用户可以存在一个组中，也可以是组中的唯一成员。

* 一对多
	即一个用户可以存在多个用户组中。那么此用户具有多个组的共同权限。

* 多对一
	多个用户可以存在一个组中，这些用户具有和组相同的权限。

* 多对多
	多个用户可以存在多个组中。其实就是上面三个对应关系的扩展。

.. rubric :: 脚注

.. [#SQL查询] 用SQL语句查询数据库